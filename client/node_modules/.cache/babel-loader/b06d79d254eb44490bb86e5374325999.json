{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web\\\\Web\\\\Udemy course\\\\Complete React developer\\\\e-commerce_shop\\\\src\\\\pages\\\\shop\\\\shop.jsx\";\nimport React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nimport \"./shop.scss\";\nimport CollectionOverview from \"../../components/collection-overview/collection-overview\";\nimport CollectionPage from \"../category/CollectionPage\";\nimport { updateCollections } from \"../../redux/shopPage/shopPage-action\";\nimport LoadingSpinner from '../../components/loading_spinner/loading_spinner';\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapshot = null;\n    this.CollectionOverviewWithSpinner = LoadingSpinner(CollectionOverview);\n  }\n\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props;\n    const collectionRef = firestore.collection(\"collections\");\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      component: CollectionOverview,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      component: CollectionPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["D:/Web/Web/Udemy course/Complete React developer/e-commerce_shop/src/pages/shop/shop.jsx"],"names":["React","Route","connect","firestore","convertCollectionsSnapshotToMap","CollectionOverview","CollectionPage","updateCollections","LoadingSpinner","ShopPage","Component","state","loading","unsubscribeFromSnapshot","CollectionOverviewWithSpinner","componentDidMount","props","collectionRef","collection","get","then","snapshot","collectionsMap","setState","render","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SACEC,SADF,EAEEC,+BAFF,QAGO,+BAHP;AAIA,OAAO,aAAP;AACA,OAAOC,kBAAP,MAA+B,0DAA/B;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AACA,SAASC,iBAAT,QAAkC,sCAAlC;AACA,OAAOC,cAAP,MAA2B,kDAA3B;;AACA,MAAMC,QAAN,SAAuBT,KAAK,CAACU,SAA7B,CAAuC;AAAA;AAAA;AAAA,SAErCC,KAFqC,GAE9B;AACLC,MAAAA,OAAO,EAAE;AADJ,KAF8B;AAAA,SAKrCC,uBALqC,GAKX,IALW;AAAA,SAOrCC,6BAPqC,GAOLN,cAAc,CAACH,kBAAD,CAPT;AAAA;;AASrCU,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAER,MAAAA;AAAF,QAAwB,KAAKS,KAAnC;AACA,UAAMC,aAAa,GAAGd,SAAS,CAACe,UAAV,CAAqB,aAArB,CAAtB;AAEAD,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAA0BC,QAAD,IAAc;AACrC,YAAMC,cAAc,GAAGlB,+BAA+B,CAACiB,QAAD,CAAtD;AACAd,MAAAA,iBAAiB,CAACe,cAAD,CAAjB;AACA,WAAKC,QAAL,CAAc;AAACX,QAAAA,OAAO,EAAE;AAAV,OAAd;AACD,KAJD;AAKD;;AACDY,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKT,KAAvB;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAES,KAAK,CAACC,IAAK,EAAjC;AAAoC,MAAA,SAAS,EAAErB,kBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAG,GAAEoB,KAAK,CAACC,IAAK,gBADtB;AAEE,MAAA,SAAS,EAAEpB,cAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AASD;;AA9BoC;;AAgCvC,MAAMqB,kBAAkB,GAAIC,QAAD,KAAe;AACxCrB,EAAAA,iBAAiB,EAAGe,cAAD,IACjBM,QAAQ,CAACrB,iBAAiB,CAACe,cAAD,CAAlB;AAF8B,CAAf,CAA3B;;AAKA,eAAepB,OAAO,CAAC,IAAD,EAAOyB,kBAAP,CAAP,CAAkClB,QAAlC,CAAf","sourcesContent":["import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  firestore,\r\n  convertCollectionsSnapshotToMap,\r\n} from \"../../firebase/firebase.utils\";\r\nimport \"./shop.scss\";\r\nimport CollectionOverview from \"../../components/collection-overview/collection-overview\";\r\nimport CollectionPage from \"../category/CollectionPage\";\r\nimport { updateCollections } from \"../../redux/shopPage/shopPage-action\";\r\nimport LoadingSpinner from '../../components/loading_spinner/loading_spinner'\r\nclass ShopPage extends React.Component {\r\n\r\n  state ={ \r\n    loading: true\r\n  }\r\n  unsubscribeFromSnapshot = null;\r\n\r\n  CollectionOverviewWithSpinner = LoadingSpinner(CollectionOverview);\r\n\r\n  componentDidMount() {\r\n    const { updateCollections } = this.props;\r\n    const collectionRef = firestore.collection(\"collections\");\r\n\r\n    collectionRef.get().then((snapshot) => {\r\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n      updateCollections(collectionsMap);\r\n      this.setState({loading: false})\r\n    });\r\n  }\r\n  render() {\r\n    const { match } = this.props;\r\n    return (\r\n      <div className=\"shop-page\">\r\n        <Route exact path={`${match.path}`} component={CollectionOverview} />\r\n        <Route\r\n          path={`${match.path}/:collectionId`}\r\n          component={CollectionPage}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  updateCollections: (collectionsMap) =>\r\n    dispatch(updateCollections(collectionsMap)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ShopPage);\r\n"]},"metadata":{},"sourceType":"module"}