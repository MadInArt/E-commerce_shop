{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web\\\\Web\\\\Udemy course\\\\Complete React developer\\\\e-commerce_shop\\\\src\\\\components\\\\signup\\\\signup.jsx\";\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport CustomButton from \"../../components/button/button\";\nimport InputForm from \"../../components/inputform/inputform\";\nimport \"./signup.scss\";\nimport { signUpStart } from \"../../redux/user/user-action\";\n\nconst SignUp = ({\n  signUpStart\n}) => {\n  const [userCredentials, setuserCredentials] = useState({\n    displayName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  });\n\n  const onSubmitHandle = async event => {\n    const {\n      signUpStart\n    } = this.props;\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert(\"Your passwords don't match\");\n      return;\n    }\n\n    signUpStart({\n      displayName,\n      email,\n      password\n    });\n  };\n\n  const onChangeHadnle = event => {\n    const {\n      value,\n      name\n    } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  const {\n    displayName,\n    email,\n    password,\n    confirmPassword\n  } = this.state;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sign-up-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, \"I don't have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, \"Sign up with new email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: this.onSubmitHandle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputForm, {\n    name: \"displayName\",\n    label: \"Name\",\n    value: displayName,\n    onChange: this.onChangeHadnle,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(InputForm, {\n    name: \"email\",\n    label: \"Email\",\n    type: \"email\",\n    value: email,\n    onChange: this.onChangeHadnle,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(InputForm, {\n    name: \"password\",\n    type: \"password\",\n    label: \"Password\",\n    value: password,\n    onChange: this.onChangeHadnle,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(InputForm, {\n    name: \"confirmPassword\",\n    label: \"Confirm password\",\n    type: \"password\",\n    value: confirmPassword,\n    onChange: this.onChangeHadnle,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, \" Sign up \")));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["D:/Web/Web/Udemy course/Complete React developer/e-commerce_shop/src/components/signup/signup.jsx"],"names":["React","useState","connect","CustomButton","InputForm","signUpStart","SignUp","userCredentials","setuserCredentials","displayName","email","password","confirmPassword","onSubmitHandle","event","props","preventDefault","alert","onChangeHadnle","value","name","target","setState","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport CustomButton from \"../../components/button/button\";\r\nimport InputForm from \"../../components/inputform/inputform\";\r\nimport \"./signup.scss\";\r\n\r\nimport { signUpStart } from \"../../redux/user/user-action\";\r\n\r\nconst  SignUp =({ signUpStart})=>  {\r\n  const [userCredentials, setuserCredentials] = useState({\r\n     displayName: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n  })\r\n\r\n  const onSubmitHandle = async (event) => {\r\n    const { signUpStart } = this.props;\r\n    event.preventDefault();\r\n\r\n \r\n\r\n    if (password !== confirmPassword) {\r\n      alert(\"Your passwords don't match\");\r\n      return;\r\n    }\r\n    signUpStart({ displayName, email, password });\r\n  };\r\n\r\n  const onChangeHadnle = (event) => {\r\n    const { value, name } = event.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n    const { displayName, email, password, confirmPassword } = this.state;\r\n\r\n    return (\r\n      <div className=\"sign-up-container\">\r\n        <h1>I don't have an account</h1>\r\n        <span>Sign up with new email and password</span>\r\n\r\n        <form onSubmit={this.onSubmitHandle}>\r\n          <InputForm\r\n            name=\"displayName\"\r\n            label=\"Name\"\r\n            value={displayName}\r\n            onChange={this.onChangeHadnle}\r\n            required\r\n          />\r\n          <InputForm\r\n            name=\"email\"\r\n            label=\"Email\"\r\n            type=\"email\"\r\n            value={email}\r\n            onChange={this.onChangeHadnle}\r\n            required\r\n          />\r\n          <InputForm\r\n            name=\"password\"\r\n            type=\"password\"\r\n            label=\"Password\"\r\n            value={password}\r\n            onChange={this.onChangeHadnle}\r\n            required\r\n          />\r\n          <InputForm\r\n            name=\"confirmPassword\"\r\n            label=\"Confirm password\"\r\n            type=\"password\"\r\n            value={confirmPassword}\r\n            onChange={this.onChangeHadnle}\r\n            required\r\n          />\r\n          <CustomButton type=\"submit\"> Sign up </CustomButton>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  signUpStart: (userCredentials) => dispatch(signUpStart(userCredentials)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(SignUp);\r\n"]},"metadata":{},"sourceType":"module"}