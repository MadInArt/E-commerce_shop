{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web\\\\Web\\\\Udemy course\\\\Complete React developer\\\\e-commerce_shop\\\\src\\\\components\\\\signin\\\\signin.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport CustomButton from \"../../components/button/button\";\nimport InputForm from \"../../components/inputform/inputform\";\nimport \"./signin.scss\";\nimport { googleSignInStart, emailSignInStart } from \"../../redux/user/user-action\";\n\nclass SignIn extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onSubmitHandle = async event => {\n      event.preventDefault();\n      const {\n        email,\n        password\n      } = this.state;\n      const {\n        emailSignInStart\n      } = this.props;\n      emailSignInStart(email, password);\n    };\n\n    this.onChangeHadnle = event => {\n      const {\n        value,\n        name\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n  }\n\n  render() {\n    const {\n      email,\n      password\n    } = this.state;\n    const {\n      googleSignInStart\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sign-in-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }\n    }, \"I already have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }, \"Sign in with existing email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmitHandle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(InputForm, {\n      name: \"email\",\n      type: \"email\",\n      label: \"Email\",\n      value: email,\n      onChange: this.onChangeHadnle,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(InputForm, {\n      name: \"password\",\n      label: \"password\",\n      type: \"Password\",\n      value: password,\n      onChange: this.onChangeHadnle,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(CustomButton, {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, \" Sign in \"), /*#__PURE__*/React.createElement(CustomButton, {\n      type: \"button\",\n      onClick: googleSignInStart,\n      isGoogleSignIn: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }, \"Sign in with Google\"))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["D:/Web/Web/Udemy course/Complete React developer/e-commerce_shop/src/components/signin/signin.jsx"],"names":["React","connect","CustomButton","InputForm","googleSignInStart","emailSignInStart","SignIn","Component","onSubmitHandle","event","preventDefault","email","password","state","props","onChangeHadnle","value","name","target","setState","render","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport CustomButton from \"../../components/button/button\";\r\nimport InputForm from \"../../components/inputform/inputform\";\r\nimport \"./signin.scss\";\r\n\r\nimport {\r\n  googleSignInStart,\r\n  emailSignInStart,\r\n} from \"../../redux/user/user-action\";\r\nclass SignIn extends React.Component {\r\n\r\n\r\n  onSubmitHandle = async (event) => {\r\n    event.preventDefault();\r\n    const { email, password } = this.state;\r\n    const { emailSignInStart } = this.props;\r\n\r\n    emailSignInStart(email, password);\r\n  };\r\n  onChangeHadnle = (event) => {\r\n    const { value, name } = event.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { email, password } = this.state;\r\n    const { googleSignInStart } = this.props;\r\n    return (\r\n      <div className=\"sign-in-container\">\r\n        <h1>I already have an account</h1>\r\n        <span>Sign in with existing email and password</span>\r\n\r\n        <form onSubmit={this.onSubmitHandle}>\r\n          <InputForm\r\n            name=\"email\"\r\n            type=\"email\"\r\n            label=\"Email\"\r\n            value={email}\r\n            onChange={this.onChangeHadnle}\r\n            required\r\n          />\r\n          <InputForm\r\n            name=\"password\"\r\n            label=\"password\"\r\n            type=\"Password\"\r\n            value={password}\r\n            onChange={this.onChangeHadnle}\r\n            required\r\n          />\r\n          <div className=\"buttons\">\r\n            <CustomButton type=\"submit\"> Sign in </CustomButton>\r\n            <CustomButton\r\n              type=\"button\"\r\n              onClick={googleSignInStart}\r\n              isGoogleSignIn\r\n            >\r\n              Sign in with Google\r\n            </CustomButton>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  googleSignInStart: () => dispatch(googleSignInStart()),\r\n  emailSignInStart: (email, password) =>\r\n    dispatch(emailSignInStart({ email, password })),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(SignIn);\r\n"]},"metadata":{},"sourceType":"module"}