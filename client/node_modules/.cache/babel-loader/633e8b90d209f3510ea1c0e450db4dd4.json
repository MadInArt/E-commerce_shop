{"ast":null,"code":"import { takeLatest, put, all, call } from \"redux-saga/effects\";\nimport userActions from \"./user-constants\";\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from \"../../firebase/firebase.utils\";\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure, signUpSuccess, signUpFailure } from \"./user-action\";\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onGoogleSigninStart() {\n  yield takeLatest(userActions.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* oncheckUserSession() {\n  yield takeLatest(userActions.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* signUp({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield put(signUpSuccess({\n      user,\n      additionalData: {\n        displayName\n      }\n    }));\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\nexport function* onEmailSigninStart() {\n  yield takeLatest(userActions.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(userActions.SIGN_OUT_START, signOut);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(userActions.SIGN_UP_START);\n}\nexport function* onSignUpSuccess() {\n  yield takeLatest(userActions.SIGN_UP_SUCCESS, signInAfterSignUp);\n}\nexport function* signInAfterSignUp({\n  payl\n}) {\n  yield takeLatest(userActions.SIGN_UP_SUCCESS, signInAfterSignUp);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSigninStart), call(onEmailSigninStart), call(oncheckUserSession), call(onSignOutStart)]);\n}","map":{"version":3,"sources":["D:/Web/Web/Udemy course/Complete React developer/e-commerce_shop/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","userActions","auth","googleProvider","createUserProfileDocument","getCurrentUser","signInSuccess","signInFailure","signOutSuccess","signOutFailure","signUpSuccess","signUpFailure","getSnapshotFromUserAuth","userAuth","userRef","userSnapshot","get","id","data","error","signInWithGoogle","user","signInWithPopup","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onGoogleSigninStart","GOOGLE_SIGN_IN_START","isUserAuthenticated","oncheckUserSession","CHECK_USER_SESSION","signOut","signUp","displayName","createUserWithEmailAndPassword","additionalData","onEmailSigninStart","EMAIL_SIGN_IN_START","onSignOutStart","SIGN_OUT_START","onSignUpStart","SIGN_UP_START","onSignUpSuccess","SIGN_UP_SUCCESS","signInAfterSignUp","payl","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, put, all, call } from \"redux-saga/effects\";\r\nimport userActions from \"./user-constants\";\r\n\r\nimport {\r\n  auth,\r\n  googleProvider,\r\n  createUserProfileDocument,\r\n  getCurrentUser,\r\n} from \"../../firebase/firebase.utils\";\r\n\r\nimport {\r\n  signInSuccess,\r\n  signInFailure,\r\n  signOutSuccess,\r\n  signOutFailure,\r\n  signUpSuccess,\r\n  signUpFailure,\r\n} from \"./user-action\";\r\n\r\nexport function* getSnapshotFromUserAuth(userAuth) {\r\n  try {\r\n    const userRef = yield call(createUserProfileDocument, userAuth);\r\n    const userSnapshot = yield userRef.get();\r\n    yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\r\n  } catch (error) {\r\n    yield put(signInFailure(error));\r\n  }\r\n}\r\n\r\nexport function* signInWithGoogle() {\r\n  try {\r\n    const { user } = yield auth.signInWithPopup(googleProvider);\r\n    yield getSnapshotFromUserAuth(user);\r\n  } catch (error) {\r\n    yield put(signInFailure(error));\r\n  }\r\n}\r\nexport function* signInWithEmail({ payload: { email, password } }) {\r\n  try {\r\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\r\n    yield getSnapshotFromUserAuth(user);\r\n  } catch (error) {\r\n    yield put(signInFailure(error));\r\n  }\r\n}\r\nexport function* onGoogleSigninStart() {\r\n  yield takeLatest(userActions.GOOGLE_SIGN_IN_START, signInWithGoogle);\r\n}\r\n\r\nexport function* isUserAuthenticated() {\r\n  try {\r\n    const userAuth = yield getCurrentUser();\r\n    if (!userAuth) return;\r\n    yield getSnapshotFromUserAuth(userAuth);\r\n  } catch (error) {\r\n    yield put(signInFailure(error));\r\n  }\r\n}\r\nexport function* oncheckUserSession() {\r\n  yield takeLatest(userActions.CHECK_USER_SESSION, isUserAuthenticated);\r\n}\r\nexport function* signOut() {\r\n  try {\r\n    yield auth.signOut();\r\n    yield put(signOutSuccess());\r\n  } catch (error) {\r\n    yield put(signOutFailure(error));\r\n  }\r\n}\r\n\r\nexport function* signUp({ payload: { email, password, displayName } }) {\r\n  try {\r\n    const { user } = yield auth.createUserWithEmailAndPassword(email, password);\r\n    yield put(signUpSuccess({ user, additionalData: { displayName } }));\r\n  } catch (error) {\r\n    yield put(signUpFailure(error));\r\n  }\r\n}\r\n\r\nexport function* onEmailSigninStart() {\r\n  yield takeLatest(userActions.EMAIL_SIGN_IN_START, signInWithEmail);\r\n}\r\nexport function* onSignOutStart() {\r\n  yield takeLatest(userActions.SIGN_OUT_START, signOut);\r\n}\r\nexport function* onSignUpStart() {\r\n  yield takeLatest(userActions.SIGN_UP_START);\r\n}\r\nexport function* onSignUpSuccess() {\r\n  yield takeLatest(userActions.SIGN_UP_SUCCESS, signInAfterSignUp);\r\n}\r\nexport function* signInAfterSignUp({payl}) {\r\n  yield takeLatest(userActions.SIGN_UP_SUCCESS, signInAfterSignUp);\r\n}\r\nexport function* userSagas() {\r\n  yield all([\r\n    call(onGoogleSigninStart),\r\n    call(onEmailSigninStart),\r\n    call(oncheckUserSession),\r\n    call(onSignOutStart),\r\n  ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}