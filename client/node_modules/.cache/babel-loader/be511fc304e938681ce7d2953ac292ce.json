{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyDzgZErucP_p3Rs4ilRpplnbsH-0Lj0_QA\",\n  authDomain: \"e-commerce-shop-dc68b.firebaseapp.com\",\n  databaseURL: \"https://e-commerce-shop-dc68b.firebaseio.com\",\n  projectId: \"e-commerce-shop-dc68b\",\n  storageBucket: \"e-commerce-shop-dc68b.appspot.com\",\n  messagingSenderId: \"950147081480\",\n  appId: \"1:950147081480:web:0cc1a095a0414651c2b8bd\",\n  measurementId: \"G-SJCNTMC2N4\"\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const createUserProfileDoc = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users$${userAuth.uid}`);\n  const snapshot = await userRef.get();\n\n  if (!snapshot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n};\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["D:/Web/Web/Udemy course/Complete React developer/e-commerce_shop/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","auth","firestore","createUserProfileDoc","userAuth","additionalData","userRef","doc","uid","snapshot","get","exists","displayName","email","createdAt","Date","set","error","console","log","message","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAE;AACZC,EAAAA,MAAM,EAAE,yCADI;AAEZC,EAAAA,UAAU,EAAE,uCAFA;AAGZC,EAAAA,WAAW,EAAE,8CAHD;AAIZC,EAAAA,SAAS,EAAE,uBAJC;AAKZC,EAAAA,aAAa,EAAE,mCALH;AAMZC,EAAAA,iBAAiB,EAAE,cANP;AAOZC,EAAAA,KAAK,EAAE,2CAPK;AAQZC,EAAAA,aAAa,EAAE;AARH,CAAd;AAWAT,QAAQ,CAACU,aAAT,CAAuBT,MAAvB;AAEA,OAAO,MAAMU,IAAI,GAAGX,QAAQ,CAACW,IAAT,EAAb;AACP,OAAO,MAAMC,SAAS,GAAGZ,QAAQ,CAACY,SAAT,EAAlB;AAEP,OAAO,MAAMC,oBAAoB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AACtE,MAAG,CAACD,QAAJ,EAAc;AAEd,QAAME,OAAO,GAAGJ,SAAS,CAACK,GAAV,CAAe,SAAQH,QAAQ,CAACI,GAAI,EAApC,CAAhB;AAEA,QAAMC,QAAQ,GAAG,MAAMH,OAAO,CAACI,GAAR,EAAvB;;AAEA,MAAG,CAACD,QAAQ,CAACE,MAAb,EAAoB;AAClB,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAAyBT,QAA/B;AACA,UAAMU,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AAEA,QAAG;AACD,YAAMT,OAAO,CAACU,GAAR,CAAY;AAChBJ,QAAAA,WADgB;AAEhBC,QAAAA,KAFgB;AAGhBC,QAAAA,SAHgB;AAIhB,WAAGT;AAJa,OAAZ,CAAN;AAMD,KAPD,CAQA,OAAMY,KAAN,EAAY;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,KAAK,CAACG,OAAzC;AAEH;AACF;AACF,CAxBM;AA0BP,MAAMC,QAAQ,GAAG,IAAI/B,QAAQ,CAACW,IAAT,CAAcqB,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAMxB,IAAI,CAACyB,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAe/B,QAAf","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst config ={\r\n  apiKey: \"AIzaSyDzgZErucP_p3Rs4ilRpplnbsH-0Lj0_QA\",\r\n  authDomain: \"e-commerce-shop-dc68b.firebaseapp.com\",\r\n  databaseURL: \"https://e-commerce-shop-dc68b.firebaseio.com\",\r\n  projectId: \"e-commerce-shop-dc68b\",\r\n  storageBucket: \"e-commerce-shop-dc68b.appspot.com\",\r\n  messagingSenderId: \"950147081480\",\r\n  appId: \"1:950147081480:web:0cc1a095a0414651c2b8bd\",\r\n  measurementId: \"G-SJCNTMC2N4\"\r\n};\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\nexport const createUserProfileDoc = async (userAuth, additionalData) => {\r\n  if(!userAuth) return;\r\n\r\n  const userRef = firestore.doc(`users$${userAuth.uid}`);\r\n\r\n  const snapshot = await userRef.get();\r\n\r\n  if(!snapshot.exists){\r\n    const { displayName, email } = userAuth;\r\n    const createdAt = new Date();\r\n\r\n    try{\r\n      await userRef.set({\r\n        displayName,\r\n        email,\r\n        createdAt,\r\n        ...additionalData\r\n      })\r\n    }\r\n    catch(error){\r\n        console.log('error creating user', error.message\r\n        );\r\n    }\r\n  }\r\n}\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nprovider.setCustomParameters({ prompt: 'select_account' });\r\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\r\n\r\nexport default firebase;\r\n"]},"metadata":{},"sourceType":"module"}