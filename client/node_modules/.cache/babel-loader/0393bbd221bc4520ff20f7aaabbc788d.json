{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web\\\\Web\\\\Udemy course\\\\Complete React developer\\\\e-commerce_shop\\\\src\\\\components\\\\loading_spinner\\\\loading_spinner.jsx\";\nimport React from \"react\";\nimport { SpinnerOverlay, SpinnerContainer } from \"./loading_spinner.styles\";\n\nconst LoadingSpinner = WrappedComponent => {\n  const Spinner = ({\n    isLoading,\n    ...otherProps\n  }) => {\n    return isLoading ? /*#__PURE__*/React.createElement(SpinnerOverlay, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(SpinnerContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }\n    })) : /*#__PURE__*/React.createElement(WrappedComponent, Object.assign({}, otherProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 7\n      }\n    }));\n  };\n\n  return Spinner;\n};\n\nexport default LoadingSpinner;","map":{"version":3,"sources":["D:/Web/Web/Udemy course/Complete React developer/e-commerce_shop/src/components/loading_spinner/loading_spinner.jsx"],"names":["React","SpinnerOverlay","SpinnerContainer","LoadingSpinner","WrappedComponent","Spinner","isLoading","otherProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,cAAT,EAAyBC,gBAAzB,QAAiD,0BAAjD;;AAEA,MAAMC,cAAc,GAAIC,gBAAD,IAAsB;AAC3C,QAAMC,OAAO,GAAG,CAAC;AAAEC,IAAAA,SAAF;AAAa,OAAGC;AAAhB,GAAD,KAAkC;AACjD,WAAOD,SAAS,gBACb,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADa,gBAKb,oBAAC,gBAAD,oBAAsBC,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OALH;AAOA,GARD;;AASA,SAAOF,OAAP;AACD,CAXD;;AAYA,eAAeF,cAAf","sourcesContent":["import React from \"react\";\r\n\r\nimport { SpinnerOverlay, SpinnerContainer } from \"./loading_spinner.styles\";\r\n\r\nconst LoadingSpinner = (WrappedComponent) => {\r\n  const Spinner = ({ isLoading, ...otherProps }) => {\r\n   return isLoading ? (\r\n      <SpinnerOverlay>\r\n        <SpinnerContainer />\r\n      </SpinnerOverlay>\r\n    ) : (\r\n      <WrappedComponent {...otherProps} />\r\n    );\r\n  };\r\n  return Spinner;\r\n};\r\nexport default LoadingSpinner;\r\n"]},"metadata":{},"sourceType":"module"}