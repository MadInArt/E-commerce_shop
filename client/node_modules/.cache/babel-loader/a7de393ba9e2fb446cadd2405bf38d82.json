{"ast":null,"code":"import { createSelector } from \"reselect\";\n\nvar memoize = require(\"memoize\");\n\nconst selectShop = state => state.shop;\n\nexport const selectCollections = createSelector([selectShop], shop => shop.collections);\nexport const selectCollectionsForPreview = createSelector([selectCollections], collections => collections ? Object.keys(collections).map(key => collections[key]) : []);\nexport const selectCollection = collectionUrlParam => createSelector([selectCollections], collections => {\n  return collections.find(collection => {\n    return collection.routeName === collectionUrlParam;\n  });\n});","map":{"version":3,"sources":["D:/Web/Web/Udemy course/Complete React developer/e-commerce_shop/src/redux/shopPage/shopPage-selector.js"],"names":["createSelector","memoize","require","selectShop","state","shop","selectCollections","collections","selectCollectionsForPreview","Object","keys","map","key","selectCollection","collectionUrlParam","find","collection","routeName"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;;AACA,IAAIC,OAAO,GAAGC,OAAO,CAAC,SAAD,CAArB;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAWA,KAAK,CAACC,IAApC;;AAEA,OAAO,MAAMC,iBAAiB,GAAGN,cAAc,CAC7C,CAACG,UAAD,CAD6C,EAE5CE,IAAD,IAAUA,IAAI,CAACE,WAF8B,CAAxC;AAKP,OAAO,MAAMC,2BAA2B,GAAGR,cAAc,CACvD,CAACM,iBAAD,CADuD,EAEtDC,WAAD,IACEA,WAAW,GAAGE,MAAM,CAACC,IAAP,CAAYH,WAAZ,EAAyBI,GAAzB,CAA8BC,GAAD,IAASL,WAAW,CAACK,GAAD,CAAjD,CAAH,GAA6D,EAHnB,CAAlD;AAMP,OAAO,MAAMC,gBAAgB,GAAIC,kBAAD,IAC9Bd,cAAc,CAAC,CAACM,iBAAD,CAAD,EAAuBC,WAAD,IAAiB;AACnD,SAAOA,WAAW,CAACQ,IAAZ,CAAkBC,UAAD,IAAgB;AACtC,WAAOA,UAAU,CAACC,SAAX,KAAyBH,kBAAhC;AACD,GAFM,CAAP;AAGD,CAJa,CADT","sourcesContent":["import { createSelector } from \"reselect\";\r\nvar memoize = require(\"memoize\");\r\n\r\nconst selectShop = (state) => state.shop;\r\n\r\nexport const selectCollections = createSelector(\r\n  [selectShop],\r\n  (shop) => shop.collections\r\n);\r\n\r\nexport const selectCollectionsForPreview = createSelector(\r\n  [selectCollections],\r\n  (collections) =>\r\n    collections ? Object.keys(collections).map((key) => collections[key]) : []\r\n);\r\n\r\nexport const selectCollection = (collectionUrlParam) =>\r\n  createSelector([selectCollections], (collections) => {\r\n    return collections.find((collection) => {\r\n      return collection.routeName === collectionUrlParam;\r\n    });\r\n  });\r\n"]},"metadata":{},"sourceType":"module"}