{"ast":null,"code":"import { takeLatest, put, all, call } from \"redux-saga/effects\";\nimport userActions from \"./user-constants\";\nimport { auth, googleProvider, createUserProfileDocument } from \"../../firebase/firebase.utils\";\nimport { googleSignInStart, emailSignInStart, emailSignInFailure } from \"./user-action\";\nimport { googleSignInSuccess, googleSignInFailure, emailSignInSuccess, emailSignFailure } from \"./user-action\";\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(googleSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(googleSignInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmail(email, password);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(emailSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(emailSignInFailure(error));\n  }\n}\nexport function* onGoogleSigninStart() {\n  yield takeLatest(userActions.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSigninStart() {\n  yield takeLatest(userActions.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSigninStart)]);\n}","map":{"version":3,"sources":["D:/Web/Web/Udemy course/Complete React developer/e-commerce_shop/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","userActions","auth","googleProvider","createUserProfileDocument","googleSignInStart","emailSignInStart","emailSignInFailure","googleSignInSuccess","googleSignInFailure","emailSignInSuccess","emailSignFailure","signInWithGoogle","user","signInWithPopup","userRef","userSnapshot","get","id","data","error","signInWithEmail","payload","email","password","onGoogleSigninStart","GOOGLE_SIGN_IN_START","onEmailSigninStart","EMAIL_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AAEA,SACEC,IADF,EAEEC,cAFF,EAGEC,yBAHF,QAIO,+BAJP;AAKA,SACEC,iBADF,EAEEC,gBAFF,EAGEC,kBAHF,QAIO,eAJP;AAMA,SACEC,mBADF,EAEEC,mBAFF,EAGEC,kBAHF,EAIEC,gBAJF,QAKO,eALP;AAOA,OAAO,UAAUC,gBAAV,GAA6B;AAClC,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMX,IAAI,CAACY,eAAL,CAAqBX,cAArB,CAAvB;AACA,UAAMY,OAAO,GAAG,MAAMf,IAAI,CAACI,yBAAD,EAA4BS,IAA5B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMnB,GAAG,CACPU,mBAAmB,CAAC;AAAEU,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAnB;AAAuB,SAAGF,YAAY,CAACG,IAAb;AAA1B,KAAD,CADZ,CAAT;AAGD,GAPD,CAOE,OAAOC,KAAP,EAAc;AACd,UAAMtB,GAAG,CAACW,mBAAmB,CAACW,KAAD,CAApB,CAAT;AACD;AACF;AACD,OAAO,UAAUC,eAAV,CAA0B;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAX,CAA1B,EAA4D;AACjE,MAAI;AACF,UAAM;AAAEX,MAAAA;AAAF,QAAW,MAAMX,IAAI,CAACmB,eAAL,CAAqBE,KAArB,EAA4BC,QAA5B,CAAvB;AACA,UAAMT,OAAO,GAAG,MAAMf,IAAI,CAACI,yBAAD,EAA4BS,IAA5B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMnB,GAAG,CACRY,kBAAkB,CAAC;AAAEQ,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAnB;AAAuB,SAAGF,YAAY,CAACG,IAAb;AAA1B,KAAD,CADV,CAAT;AAGD,GAPD,CAOE,OAAOC,KAAP,EAAc;AACd,UAAMtB,GAAG,CAACS,kBAAkB,CAACa,KAAD,CAAnB,CAAT;AACD;AACF;AACD,OAAO,UAAUK,mBAAV,GAAgC;AACrC,QAAM5B,UAAU,CAACI,WAAW,CAACyB,oBAAb,EAAmCd,gBAAnC,CAAhB;AACD;AAED,OAAO,UAAUe,kBAAV,GAA+B;AACpC,QAAM9B,UAAU,CAACI,WAAW,CAAC2B,mBAAb,EAAkCP,eAAlC,CAAhB;AACD;AAED,OAAO,UAAUQ,SAAV,GAAsB;AAC3B,QAAM9B,GAAG,CAAC,CAACC,IAAI,CAACyB,mBAAD,CAAL,CAAD,CAAT;AACD","sourcesContent":["import { takeLatest, put, all, call } from \"redux-saga/effects\";\r\nimport userActions from \"./user-constants\";\r\n\r\nimport {\r\n  auth,\r\n  googleProvider,\r\n  createUserProfileDocument,\r\n} from \"../../firebase/firebase.utils\";\r\nimport {\r\n  googleSignInStart,\r\n  emailSignInStart,\r\n  emailSignInFailure,\r\n} from \"./user-action\";\r\n\r\nimport {\r\n  googleSignInSuccess,\r\n  googleSignInFailure,\r\n  emailSignInSuccess,\r\n  emailSignFailure,\r\n} from \"./user-action\";\r\n\r\nexport function* signInWithGoogle() {\r\n  try {\r\n    const { user } = yield auth.signInWithPopup(googleProvider);\r\n    const userRef = yield call(createUserProfileDocument, user);\r\n    const userSnapshot = yield userRef.get();\r\n    yield put(\r\n      googleSignInSuccess({ id: userSnapshot.id, ...userSnapshot.data() })\r\n    );\r\n  } catch (error) {\r\n    yield put(googleSignInFailure(error));\r\n  }\r\n}\r\nexport function* signInWithEmail({ payload: { email, password } }) {\r\n  try {\r\n    const { user } = yield auth.signInWithEmail(email, password);\r\n    const userRef = yield call(createUserProfileDocument, user);\r\n    const userSnapshot = yield userRef.get();\r\n    yield put(\r\n     emailSignInSuccess({ id: userSnapshot.id, ...userSnapshot.data() })\r\n    );\r\n  } catch (error) {\r\n    yield put(emailSignInFailure(error));\r\n  }\r\n}\r\nexport function* onGoogleSigninStart() {\r\n  yield takeLatest(userActions.GOOGLE_SIGN_IN_START, signInWithGoogle);\r\n}\r\n\r\nexport function* onEmailSigninStart() {\r\n  yield takeLatest(userActions.EMAIL_SIGN_IN_START, signInWithEmail);\r\n}\r\n\r\nexport function* userSagas() {\r\n  yield all([call(onGoogleSigninStart)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}